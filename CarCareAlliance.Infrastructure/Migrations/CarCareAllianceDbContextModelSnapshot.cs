// <auto-generated />
using System;
using CarCareAlliance.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarCareAlliance.Infrastructure.Migrations
{
    [DbContext(typeof(CarCareAllianceDbContext))]
    partial class CarCareAllianceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarCareAlliance.Domain.AuthenticationAggregate.Authentication", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RegisteredUsers");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.ExpenseHistoryAggregate.ExpenseHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiptImage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ExpenseHistories");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.MaintenanceAggregate.ScheduledMaintenance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ScheduledMaintenances", (string)null);
                });

            modelBuilder.Entity("CarCareAlliance.Domain.MechanicAggregate.MechanicProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Experience")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ServicePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MechanicProfiles", (string)null);
                });

            modelBuilder.Entity("CarCareAlliance.Domain.NotificationAggregate.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeSent")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ScheduledMaintenanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TextMessage")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.PartsCategoryAggregate.SparePartsCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SparePartsCategories");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.PhotoAggregate.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTaken")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ServicePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.RepairAggregate.RepairHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RepairStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RepairHistories", (string)null);
                });

            modelBuilder.Entity("CarCareAlliance.Domain.ReviewAggregate.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.ServiceHistoryAggregate.ServiceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ServicePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ServiceHistories", (string)null);
                });

            modelBuilder.Entity("CarCareAlliance.Domain.ServicePartnerAggregate.ServicePartner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("LogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("WorkScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ServicePartners", (string)null);
                });

            modelBuilder.Entity("CarCareAlliance.Domain.SparePartAggregate.SparePart", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid>("SparePartsCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpareParts");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.TicketAggregate.Entities.OrderDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderDetailsId");

                    b.Property<Guid>("AssignedMechanicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Comments");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("FinalPrice");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Mileage");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrepaymentAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("PrepaymentAmount");

                    b.HasKey("Id");

                    b.ToTable("OrderDetailsCollection");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.UserProfileAggregate.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles", (string)null);
                });

            modelBuilder.Entity("CarCareAlliance.Domain.VehicleAggregate.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("CarCareAlliance.Domain.WorkScheduleAggregate.WorkSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayOfWeek")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("EndTime");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("StartTime");

                    b.Property<string>("Weekends")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.MaintenanceAggregate.ScheduledMaintenance", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.MaintenanceAggregate.Entities.MaintenanceType", "MaintenanceTypes", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ScheduledMaintenanceTypeId");

                            b1.Property<Guid>("ScheduledMaintenanceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)");

                            b1.Property<DateTime>("ModifiedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("Id", "ScheduledMaintenanceId");

                            b1.HasIndex("ScheduledMaintenanceId");

                            b1.ToTable("ScheduledMaintenanceTypes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ScheduledMaintenanceId");
                        });

                    b.OwnsMany("CarCareAlliance.Domain.NotificationAggregate.ValueObjects.NotificationId", "NotificationIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ScheduledMaintenanceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("NotificationId");

                            b1.HasKey("Id");

                            b1.HasIndex("ScheduledMaintenanceId");

                            b1.ToTable("ScheduledMaintenanceNotificationIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ScheduledMaintenanceId");
                        });

                    b.Navigation("MaintenanceTypes");

                    b.Navigation("NotificationIds");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.MechanicAggregate.MechanicProfile", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.ReviewAggregate.ValueObjects.ReviewId", "ReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("MechanicProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ReviewId");

                            b1.HasKey("Id");

                            b1.HasIndex("MechanicProfileId");

                            b1.ToTable("MechanicProfileReviewIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MechanicProfileId");
                        });

                    b.Navigation("ReviewIds");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.RepairAggregate.RepairHistory", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.NotificationAggregate.ValueObjects.NotificationId", "NotificationIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("RepairHistoryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("NotificationId");

                            b1.HasKey("Id");

                            b1.HasIndex("RepairHistoryId");

                            b1.ToTable("RepairHistoryNotificationIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RepairHistoryId");
                        });

                    b.Navigation("NotificationIds");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.ServiceHistoryAggregate.ServiceHistory", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.ServiceHistoryAggregate.Entities.Ticket", "Tickets", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ServiceHistoryTicketId");

                            b1.Property<Guid>("ServiceHistoryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateSubmitted")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<DateTime>("ModifiedDate")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("OrderDetailsId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("PaymentStatus")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("RepairStatus")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<Guid>("UserProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id", "ServiceHistoryId");

                            b1.HasIndex("OrderDetailsId");

                            b1.HasIndex("ServiceHistoryId");

                            b1.ToTable("ServiceHistoryTickets", (string)null);

                            b1.HasOne("CarCareAlliance.Domain.TicketAggregate.Entities.OrderDetails", "OrderDetails")
                                .WithMany()
                                .HasForeignKey("OrderDetailsId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("ServiceHistoryId");

                            b1.Navigation("OrderDetails");
                        });

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.ServicePartnerAggregate.ServicePartner", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.MechanicAggregate.ValueObjects.MechanicProfileId", "MechanicProfileIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ServicePartnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("MechanicProfileId");

                            b1.HasKey("Id");

                            b1.HasIndex("ServicePartnerId");

                            b1.ToTable("ServicePartnerMechanicProfileIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ServicePartnerId");
                        });

                    b.OwnsMany("CarCareAlliance.Domain.ServicePartnerAggregate.Entities.ServiceCategory", "ServiceCategories", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ServicePartnerServiceCategoryId");

                            b1.Property<Guid>("ServicePartnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Description");

                            b1.Property<DateTime>("ModifiedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Name");

                            b1.HasKey("Id", "ServicePartnerId");

                            b1.HasIndex("ServicePartnerId");

                            b1.ToTable("ServicePartnerServiceCategories", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ServicePartnerId");

                            b1.OwnsMany("CarCareAlliance.Domain.ServicePartnerAggregate.Entities.Service", "Services", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("ServiceId");

                                    b2.Property<Guid>("ServicePartnerServiceCategoryId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("ServicePartnerId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<DateTime>("CreatedDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("nvarchar(255)")
                                        .HasColumnName("Description");

                                    b2.Property<decimal>("Duration")
                                        .HasColumnType("decimal(10, 2)")
                                        .HasColumnName("Duration");

                                    b2.Property<DateTime>("ModifiedDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("Name");

                                    b2.Property<decimal>("Price")
                                        .HasColumnType("decimal(10, 2)")
                                        .HasColumnName("Price");

                                    b2.HasKey("Id", "ServicePartnerServiceCategoryId", "ServicePartnerId");

                                    b2.HasIndex("ServicePartnerServiceCategoryId", "ServicePartnerId");

                                    b2.ToTable("ServiceCategoryServices", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ServicePartnerServiceCategoryId", "ServicePartnerId");
                                });

                            b1.Navigation("Services");
                        });

                    b.OwnsOne("CarCareAlliance.Domain.ServicePartnerAggregate.Entities.ServiceLocation", "ServiceLocation", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ServiceLocationId");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Address");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Country");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Description");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("decimal(10, 6)")
                                .HasColumnName("Latitude");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("decimal(10, 6)")
                                .HasColumnName("Longitude");

                            b1.Property<DateTime>("ModifiedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("PostalCode");

                            b1.Property<Guid>("ServicePartnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("State")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("State");

                            b1.HasKey("Id");

                            b1.HasIndex("ServicePartnerId")
                                .IsUnique();

                            b1.ToTable("ServiceLocations");

                            b1.WithOwner()
                                .HasForeignKey("ServicePartnerId");
                        });

                    b.OwnsMany("CarCareAlliance.Domain.PhotoAggregate.ValueObjects.PhotoId", "PhotoIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ServicePartnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PhotoId");

                            b1.HasKey("Id");

                            b1.HasIndex("ServicePartnerId");

                            b1.ToTable("ServicePartnerPhotoIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ServicePartnerId");
                        });

                    b.OwnsMany("CarCareAlliance.Domain.ReviewAggregate.ValueObjects.ReviewId", "ReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ServicePartnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ReviewId");

                            b1.HasKey("Id");

                            b1.HasIndex("ServicePartnerId");

                            b1.ToTable("ServicePartnerReviewIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ServicePartnerId");
                        });

                    b.Navigation("MechanicProfileIds");

                    b.Navigation("PhotoIds");

                    b.Navigation("ReviewIds");

                    b.Navigation("ServiceCategories");

                    b.Navigation("ServiceLocation")
                        .IsRequired();
                });

            modelBuilder.Entity("CarCareAlliance.Domain.TicketAggregate.Entities.OrderDetails", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.ServicePartnerAggregate.ValueObjects.ServiceId", "ServiceIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("OrderDetailsId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ServiceId");

                            b1.HasKey("Id");

                            b1.HasIndex("OrderDetailsId");

                            b1.ToTable("OrderDetailsServiceIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrderDetailsId");
                        });

                    b.OwnsMany("CarCareAlliance.Domain.SparePartAggregate.ValueObjects.SparePartId", "SparePartIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("OrderDetailsId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("SparePartId");

                            b1.HasKey("Id");

                            b1.HasIndex("OrderDetailsId");

                            b1.ToTable("OrderDetailsSparePartIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrderDetailsId");
                        });

                    b.Navigation("ServiceIds");

                    b.Navigation("SparePartIds");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.UserProfileAggregate.UserProfile", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.ReviewAggregate.ValueObjects.ReviewId", "ReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("UserProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ReviewId");

                            b1.HasKey("Id");

                            b1.HasIndex("UserProfileId");

                            b1.ToTable("UserProfileReviewIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserProfileId");
                        });

                    b.OwnsOne("CarCareAlliance.Domain.UserProfileAggregate.ValueObjects.UserDetailInformation", "Information", b1 =>
                        {
                            b1.Property<Guid>("UserProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Address");

                            b1.Property<string>("City")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Country");

                            b1.Property<string>("FirstName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("PhoneNumber");

                            b1.Property<string>("PostCode")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("PostCode");

                            b1.HasKey("UserProfileId");

                            b1.ToTable("UserProfiles");

                            b1.WithOwner()
                                .HasForeignKey("UserProfileId");
                        });

                    b.Navigation("Information")
                        .IsRequired();

                    b.Navigation("ReviewIds");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.VehicleAggregate.Vehicle", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.PhotoAggregate.ValueObjects.PhotoId", "PhotoIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PhotoId");

                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("VehicleId");

                            b1.ToTable("VehiclePhotoIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");
                        });

                    b.Navigation("PhotoIds");
                });

            modelBuilder.Entity("CarCareAlliance.Domain.WorkScheduleAggregate.WorkSchedule", b =>
                {
                    b.OwnsMany("CarCareAlliance.Domain.WorkScheduleAggregate.ValueObjects.BreakTime", "BreakTimes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("EndTime")
                                .HasColumnType("datetime")
                                .HasColumnName("EndTime");

                            b1.Property<DateTime>("StartTime")
                                .HasColumnType("datetime")
                                .HasColumnName("StartTime");

                            b1.Property<Guid>("WorkScheduleId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("WorkScheduleId");

                            b1.ToTable("BreakTimes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("WorkScheduleId");
                        });

                    b.Navigation("BreakTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
